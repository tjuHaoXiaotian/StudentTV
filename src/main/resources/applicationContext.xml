<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 引入外部的属性文件 -->
    <context:property-placeholder location="classpath:/jdbc.properties"/>

    <context:component-scan base-package="cn.edu.tju.scs">
        <!--<context:exclude-filter type="regex" expression="cn.edu.tju.scs.web.*"></context:exclude-filter>-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 配置 c3p0 连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 设置JDBC驱动名称 -->
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <!-- 设置JDBC连接URL -->
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <!-- 设置数据库用户名 -->
        <property name="user" value="${jdbc.username}"></property>
        <!-- 设置数据库密码 -->
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- 配置SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <!-- 指定数据库方言 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!--根据需要自动创建数据表--><!-- DB schema will be updated if needed -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <!-- 显示hibernate 持久化生成的SQL -->
                <prop key="hibernate.show_sql">true</prop>
                <!-- 将sql脚本进行格式化后再输出 -->
                <prop key="hibernate.format_sql">true</prop>
                <!--<prop key="hibernate.connection.url">${jdbc.username}</prop>-->
                <!--<prop key="hibernate.connection.driver_class">${jdbc.driverClass}</prop>-->
                <!-- 数据库事务不自动提高 -->
                <prop key="hibernate.connection.autocommit">false</prop>
            </props>
        </property>
        <!--<property name="configLocations">-->
        <!--<list>-->
        <!--<value>-->
        <!--classpath*:hibernate.cfg.xml-->
        <!--</value>-->
        <!--</list>-->
        <!--</property>-->
        <!--<property name="annotatedClasses">-->
            <!--<list>-->
                <!--<value>cn.edu.tju.cas.entity.GroupEntity</value>-->
                <!--<value>cn.edu.tju.cas.entity.SystemEntity</value>-->
                <!--<value>cn.edu.tju.cas.entity.GroupFormEntity</value>-->
                <!--<value>cn.edu.tju.cas.entity.UserGroupApplyEntity</value>-->
                <!--<value>cn.edu.tju.cas.entity.UserGroupFormValueEntity</value>-->
                <!--<value>cn.edu.tju.cas.entity.UserEntity</value>-->
            <!--</list>-->
        <!--</property>-->
        <property name="mappingLocations">
            <list>
                <value>classpath:hibernate/Admin.hbm.xml</value>
                <value>classpath:hibernate/LocalAuth.hbm.xml</value>
                <value>classpath:hibernate/User.hbm.xml</value>
                <value>classpath:hibernate/Video.hbm.xml</value>
            </list>
        </property>
        <!--<property name="annotatedClasses">-->
        <!--<list>-->
        <!--<value>com.tgb.entity.User</value>-->
        <!--</list>-->
        <!--</property>-->
    </bean>

    <!-- 配置一个事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="adminDao" class="cn.edu.tju.scs.dao.AdminDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="videoDao" class="cn.edu.tju.scs.dao.VideoDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <!-- 配置一个事务的通知：（事务增强） -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--
                 propagation:事务的传播行为
                 isolation：事务的隔离级别
                 read-only:只读
                 rollback-for:发生哪些异常回滚
                 no-rollback-for:发生哪些异常不会滚
                 timeout:过期信息（-1）
             -->
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置切面 -->
    <aop:config>
        <!-- 配置切入点,   +号代表子类 -->
        <aop:pointcut expression="execution(* cn.edu.tju.scs.service.impl.*.*(..))" id="pointCut1"/>
        <!-- 配置切面,advisor 一个切入点，一个通知;aspect 多个切入点，多个通知-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut1"/>
    </aop:config>


</beans>
